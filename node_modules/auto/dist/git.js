"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var plugin_enterprise_compatibility_1 = __importDefault(require("@octokit/plugin-enterprise-compatibility"));
var rest_1 = __importDefault(require("@octokit/rest"));
var gitlog_1 = __importDefault(require("gitlog"));
var tinycolor2_1 = __importDefault(require("tinycolor2"));
var util_1 = require("util");
var typescript_memoize_1 = require("typescript-memoize");
var exec_promise_1 = __importDefault(require("./utils/exec-promise"));
var logger_1 = require("./utils/logger");
var gitlog = util_1.promisify(gitlog_1.default);
var GitAPIError = /** @class */ (function (_super) {
    __extends(GitAPIError, _super);
    function GitAPIError(api, args, origError) {
        return _super.call(this, "Error calling github: " + api + "\n\twith: " + JSON.stringify(args) + ".\n\t" + origError.message) || this;
    }
    return GitAPIError;
}(Error));
var makeCommentIdentifier = function (context) {
    return "<!-- GITHUB_RELEASE COMMENT: " + context + " -->";
};
// A class to interact with the local git instance and the git remote.
// currently it only interfaces with GitHub.
var Git = /** @class */ (function () {
    function Git(options, logger) {
        if (logger === void 0) { logger = logger_1.dummyLog(); }
        this.logger = logger;
        this.options = options;
        this.baseUrl = this.options.baseUrl || 'https://api.github.com';
        this.logger.veryVerbose.info("Initializing GitHub with: " + this.baseUrl);
        var gitHub = rest_1.default.plugin(plugin_enterprise_compatibility_1.default);
        this.ghub = new gitHub({
            baseUrl: this.baseUrl,
            auth: "token " + this.options.token,
            previews: ['symmetra-preview']
        });
    }
    Git.prototype.getLatestReleaseInfo = function () {
        return __awaiter(this, void 0, void 0, function () {
            var latestRelease;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ghub.repos.getLatestRelease({
                            owner: this.options.owner,
                            repo: this.options.repo
                        })];
                    case 1:
                        latestRelease = _a.sent();
                        return [2 /*return*/, latestRelease.data];
                }
            });
        });
    };
    Git.prototype.getLatestRelease = function () {
        return __awaiter(this, void 0, void 0, function () {
            var latestRelease, e_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.getLatestReleaseInfo()];
                    case 1:
                        latestRelease = _a.sent();
                        this.logger.veryVerbose.info('Got response for "getLatestRelease":\n', latestRelease);
                        this.logger.verbose.info('Got latest release:\n', latestRelease);
                        return [2 /*return*/, latestRelease.tag_name];
                    case 2:
                        e_1 = _a.sent();
                        if (e_1.status === 404) {
                            this.logger.verbose.info("Couldn't find latest release on GitHub, using first commit.");
                            return [2 /*return*/, this.getFirstCommit()];
                        }
                        throw e_1;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    Git.prototype.getCommitDate = function (sha) {
        return __awaiter(this, void 0, void 0, function () {
            var date, _a, day, time, timezone;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, exec_promise_1.default('git', ['show', '-s', '--format=%ci', sha])];
                    case 1:
                        date = _b.sent();
                        _a = __read(date.split(' '), 3), day = _a[0], time = _a[1], timezone = _a[2];
                        return [2 /*return*/, day + "T" + time + timezone];
                }
            });
        });
    };
    Git.prototype.getFirstCommit = function () {
        return __awaiter(this, void 0, void 0, function () {
            var list;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, exec_promise_1.default('git', ['rev-list', 'HEAD'])];
                    case 1:
                        list = _a.sent();
                        return [2 /*return*/, list.split('\n').pop()];
                }
            });
        });
    };
    Git.prototype.getSha = function () {
        return __awaiter(this, void 0, void 0, function () {
            var result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, exec_promise_1.default('git', ['rev-parse', 'HEAD'])];
                    case 1:
                        result = _a.sent();
                        this.logger.verbose.info("Got commit SHA from HEAD: " + result);
                        return [2 /*return*/, result];
                }
            });
        });
    };
    Git.prototype.getLabels = function (prNumber) {
        return __awaiter(this, void 0, void 0, function () {
            var args, labels, e_2;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.logger.verbose.info("Getting labels for PR: " + prNumber);
                        args = {
                            owner: this.options.owner,
                            repo: this.options.repo,
                            number: prNumber
                        };
                        this.logger.verbose.info('Getting issue labels using:', args);
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, this.ghub.issues.listLabelsOnIssue(args)];
                    case 2:
                        labels = _a.sent();
                        this.logger.veryVerbose.info('Got response for "listLabelsOnIssue":\n', labels);
                        this.logger.verbose.info('Found labels on PR:\n', labels.data);
                        return [2 /*return*/, labels.data.map(function (l) { return l.name; })];
                    case 3:
                        e_2 = _a.sent();
                        throw new GitAPIError('listLabelsOnIssue', args, e_2);
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    Git.prototype.getProjectLabels = function () {
        return __awaiter(this, void 0, void 0, function () {
            var args, labels, e_3;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.logger.verbose.info("Getting labels for project: " + this.options.repo);
                        args = {
                            owner: this.options.owner,
                            repo: this.options.repo
                        };
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, this.ghub.issues.listLabelsForRepo(args)];
                    case 2:
                        labels = _a.sent();
                        this.logger.veryVerbose.info('Got response for "getProjectLabels":\n', labels);
                        this.logger.verbose.info('Found labels on project:\n', labels.data);
                        return [2 /*return*/, labels.data.map(function (l) { return l.name; })];
                    case 3:
                        e_3 = _a.sent();
                        throw new GitAPIError('getProjectLabels', args, e_3);
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    Git.prototype.getGitLog = function (start, end) {
        if (end === void 0) { end = 'HEAD'; }
        return __awaiter(this, void 0, void 0, function () {
            var log;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, gitlog({
                            repo: process.cwd(),
                            number: Number.MAX_SAFE_INTEGER,
                            fields: ['hash', 'authorName', 'authorEmail', 'rawBody'],
                            branch: start.trim() + ".." + end.trim()
                        })];
                    case 1:
                        log = _a.sent();
                        return [2 /*return*/, log.map(function (commit) { return ({
                                hash: commit.hash,
                                authorName: commit.authorName,
                                authorEmail: commit.authorEmail,
                                subject: commit.rawBody
                            }); })];
                }
            });
        });
    };
    Git.prototype.getUserByEmail = function (email) {
        return __awaiter(this, void 0, void 0, function () {
            var search;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ghub.search.users({
                            q: "in:email " + email
                        })];
                    case 1:
                        search = (_a.sent()).data;
                        return [2 /*return*/, search && search.items.length > 0
                                ? search.items[0]
                                : { login: email }];
                }
            });
        });
    };
    Git.prototype.getUserByUsername = function (username) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.ghub.users.getByUsername({
                            username: username
                        })];
                    case 1: return [2 /*return*/, (_a.sent()).data];
                }
            });
        });
    };
    Git.prototype.getPullRequest = function (pr) {
        return __awaiter(this, void 0, void 0, function () {
            var args, result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.logger.verbose.info("Getting Pull Request: " + pr);
                        args = {
                            owner: this.options.owner,
                            repo: this.options.repo,
                            number: pr
                        };
                        this.logger.verbose.info('Getting pull request info using:', args);
                        return [4 /*yield*/, this.ghub.pulls.get(args)];
                    case 1:
                        result = _a.sent();
                        this.logger.veryVerbose.info('Got pull request data\n', result);
                        this.logger.verbose.info('Got pull request info');
                        return [2 /*return*/, result];
                }
            });
        });
    };
    Git.prototype.searchRepo = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            var repo, result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        repo = "repo:" + this.options.owner + "/" + this.options.repo;
                        options.q = repo + " " + options.q;
                        this.logger.verbose.info('Searching repo using:\n', options);
                        return [4 /*yield*/, this.ghub.search.issuesAndPullRequests(options)];
                    case 1:
                        result = _a.sent();
                        this.logger.veryVerbose.info('Got response from search\n', result);
                        this.logger.verbose.info('Searched repo on GitHub.');
                        return [2 /*return*/, result.data];
                }
            });
        });
    };
    Git.prototype.createStatus = function (prInfo) {
        return __awaiter(this, void 0, void 0, function () {
            var args, result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        args = __assign({}, prInfo, { owner: this.options.owner, repo: this.options.repo });
                        this.logger.verbose.info('Creating status using:\n', args);
                        return [4 /*yield*/, this.ghub.repos.createStatus(args)];
                    case 1:
                        result = _a.sent();
                        this.logger.veryVerbose.info('Got response from createStatues\n', result);
                        this.logger.verbose.info('Created status on GitHub.');
                        return [2 /*return*/, result];
                }
            });
        });
    };
    Git.prototype.createLabel = function (name, label) {
        return __awaiter(this, void 0, void 0, function () {
            var color, result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.logger.verbose.info("Creating \"" + name + "\" label :\n" + label.name);
                        color = label.color
                            ? tinycolor2_1.default(label.color).toString('hex6')
                            : tinycolor2_1.default.random().toString('hex6');
                        return [4 /*yield*/, this.ghub.issues.createLabel({
                                name: label.name,
                                owner: this.options.owner,
                                repo: this.options.repo,
                                color: color.replace('#', ''),
                                description: label.description
                            })];
                    case 1:
                        result = _a.sent();
                        this.logger.veryVerbose.info('Got response from createLabel\n', result);
                        this.logger.verbose.info('Created label on GitHub.');
                        return [2 /*return*/, result];
                }
            });
        });
    };
    Git.prototype.updateLabel = function (name, label) {
        return __awaiter(this, void 0, void 0, function () {
            var color, result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.logger.verbose.info("Updating \"" + name + "\" label :\n" + label.name);
                        color = label.color
                            ? tinycolor2_1.default(label.color).toString('hex6')
                            : tinycolor2_1.default.random().toString('hex6');
                        return [4 /*yield*/, this.ghub.issues.updateLabel({
                                current_name: label.name,
                                owner: this.options.owner,
                                repo: this.options.repo,
                                color: color.replace('#', ''),
                                description: label.description
                            })];
                    case 1:
                        result = _a.sent();
                        this.logger.veryVerbose.info('Got response from updateLabel\n', result);
                        this.logger.verbose.info('Updated label on GitHub.');
                        return [2 /*return*/, result];
                }
            });
        });
    };
    Git.prototype.addLabelToPr = function (pr, label) {
        return __awaiter(this, void 0, void 0, function () {
            var result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.logger.verbose.info("Creating \"" + label + "\" label to PR " + pr);
                        return [4 /*yield*/, this.ghub.issues.addLabels({
                                number: pr,
                                owner: this.options.owner,
                                repo: this.options.repo,
                                labels: [label]
                            })];
                    case 1:
                        result = _a.sent();
                        this.logger.veryVerbose.info('Got response from addLabels\n', result);
                        this.logger.verbose.info('Added labels on Pull Request.');
                        return [2 /*return*/, result];
                }
            });
        });
    };
    Git.prototype.lockIssue = function (issue) {
        return __awaiter(this, void 0, void 0, function () {
            var result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.logger.verbose.info("Locking #" + issue + " issue...");
                        return [4 /*yield*/, this.ghub.issues.lock({
                                number: issue,
                                owner: this.options.owner,
                                repo: this.options.repo
                            })];
                    case 1:
                        result = _a.sent();
                        this.logger.veryVerbose.info('Got response from lock\n', result);
                        this.logger.verbose.info('Locked issue.');
                        return [2 /*return*/, result];
                }
            });
        });
    };
    Git.prototype.getProject = function () {
        return __awaiter(this, void 0, void 0, function () {
            var result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.logger.verbose.info('Getting project from GitHub');
                        return [4 /*yield*/, this.ghub.repos.get({
                                owner: this.options.owner,
                                repo: this.options.repo
                            })];
                    case 1:
                        result = (_a.sent()).data;
                        this.logger.veryVerbose.info('Got response from repos\n', result);
                        this.logger.verbose.info('Got project information.');
                        return [2 /*return*/, result];
                }
            });
        });
    };
    Git.prototype.getPullRequests = function (options) {
        return __awaiter(this, void 0, void 0, function () {
            var result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.logger.verbose.info('Getting pull requests...');
                        return [4 /*yield*/, this.ghub.pulls.list(__assign({ owner: this.options.owner.toLowerCase(), repo: this.options.repo.toLowerCase() }, options))];
                    case 1:
                        result = (_a.sent()).data;
                        this.logger.veryVerbose.info('Got response from pull requests', result);
                        this.logger.verbose.info('Got pull request');
                        return [2 /*return*/, result];
                }
            });
        });
    };
    Git.prototype.getCommitsForPR = function (pr) {
        return __awaiter(this, void 0, void 0, function () {
            var result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.logger.verbose.info("Getting commits for PR #" + pr);
                        return [4 /*yield*/, this.ghub.pulls.listCommits({
                                owner: this.options.owner.toLowerCase(),
                                repo: this.options.repo.toLowerCase(),
                                number: pr
                            })];
                    case 1:
                        result = (_a.sent()).data;
                        this.logger.veryVerbose.info("Got response from PR #" + pr + "\n", result);
                        this.logger.verbose.info("Got commits for PR #" + pr + ".");
                        return [2 /*return*/, result];
                }
            });
        });
    };
    Git.prototype.createComment = function (message, pr, context) {
        if (context === void 0) { context = 'default'; }
        return __awaiter(this, void 0, void 0, function () {
            var commentIdentifier, comments, oldMessage, result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        commentIdentifier = makeCommentIdentifier(context);
                        this.logger.verbose.info('Using comment identifier:', commentIdentifier);
                        this.logger.verbose.info('Getting previous comments on:', pr);
                        return [4 /*yield*/, this.ghub.issues.listComments({
                                owner: this.options.owner,
                                repo: this.options.repo,
                                number: pr
                            })];
                    case 1:
                        comments = _a.sent();
                        this.logger.veryVerbose.info('Got PR comments\n', comments);
                        oldMessage = comments.data.find(function (comment) {
                            return comment.body.includes(commentIdentifier);
                        });
                        if (!oldMessage) return [3 /*break*/, 3];
                        this.logger.verbose.info('Found previous message from same scope.');
                        this.logger.verbose.info('Deleting previous comment');
                        return [4 /*yield*/, this.ghub.issues.deleteComment({
                                owner: this.options.owner,
                                repo: this.options.repo,
                                comment_id: oldMessage.id
                            })];
                    case 2:
                        _a.sent();
                        this.logger.verbose.info('Successfully deleted previous comment');
                        _a.label = 3;
                    case 3:
                        this.logger.verbose.info('Creating new comment');
                        return [4 /*yield*/, this.ghub.issues.createComment({
                                owner: this.options.owner,
                                repo: this.options.repo,
                                number: pr,
                                body: commentIdentifier + "\n" + message
                            })];
                    case 4:
                        result = _a.sent();
                        this.logger.veryVerbose.info('Got response from creating comment\n', result);
                        this.logger.verbose.info('Successfully posted comment to PR');
                        return [2 /*return*/, result];
                }
            });
        });
    };
    Git.prototype.publish = function (releaseNotes, tag) {
        return __awaiter(this, void 0, void 0, function () {
            var result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.logger.verbose.info('Creating release on GitHub for tag:', tag);
                        return [4 /*yield*/, this.ghub.repos.createRelease({
                                owner: this.options.owner,
                                repo: this.options.repo,
                                tag_name: tag,
                                body: releaseNotes
                            })];
                    case 1:
                        result = _a.sent();
                        this.logger.veryVerbose.info('Got response from createRelease\n', result);
                        this.logger.verbose.info('Created GitHub release.');
                        return [2 /*return*/, result];
                }
            });
        });
    };
    __decorate([
        typescript_memoize_1.Memoize()
    ], Git.prototype, "getLatestReleaseInfo", null);
    __decorate([
        typescript_memoize_1.Memoize()
    ], Git.prototype, "getLatestRelease", null);
    __decorate([
        typescript_memoize_1.Memoize()
    ], Git.prototype, "getLabels", null);
    __decorate([
        typescript_memoize_1.Memoize()
    ], Git.prototype, "getGitLog", null);
    __decorate([
        typescript_memoize_1.Memoize()
    ], Git.prototype, "getUserByEmail", null);
    __decorate([
        typescript_memoize_1.Memoize()
    ], Git.prototype, "getUserByUsername", null);
    __decorate([
        typescript_memoize_1.Memoize()
    ], Git.prototype, "getPullRequest", null);
    __decorate([
        typescript_memoize_1.Memoize()
    ], Git.prototype, "getProject", null);
    __decorate([
        typescript_memoize_1.Memoize()
    ], Git.prototype, "getCommitsForPR", null);
    return Git;
}());
exports.default = Git;
//# sourceMappingURL=data:application/json;base64,