"use strict";
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var path = __importStar(require("path"));
var try_require_1 = __importDefault(require("./try-require"));
var chrome_1 = __importDefault(require("../plugins/chrome"));
var conventional_commits_1 = __importDefault(require("../plugins/conventional-commits"));
var npm_1 = __importDefault(require("../plugins/npm"));
var released_1 = __importDefault(require("../plugins/released"));
var plugins = new Map([
    ['npm', npm_1.default],
    ['chrome', chrome_1.default],
    ['conventional-commits', conventional_commits_1.default],
    ['released', released_1.default]
]);
function isSupported(key) {
    return !!plugins.get(key);
}
function loadPlugin(_a, logger) {
    var _b = __read(_a, 2), pluginPath = _b[0], options = _b[1];
    var plugin;
    if (isSupported(pluginPath)) {
        plugin = plugins.get(pluginPath);
    }
    else {
        plugin = try_require_1.default(pluginPath);
        if (!plugin) {
            plugin = try_require_1.default(path.join(process.cwd(), pluginPath));
        }
    }
    if (!plugin) {
        logger.log.warn("Could not find plugin: " + pluginPath);
        return;
    }
    return new plugin(options);
}
exports.default = loadPlugin;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZC1wbHVnaW5zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWxzL2xvYWQtcGx1Z2lucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEseUNBQTZCO0FBRzdCLDhEQUF1QztBQUV2Qyw2REFBcUQ7QUFDckQseUZBQXdFO0FBQ3hFLHVEQUF1QztBQUN2QyxpRUFBc0Q7QUFXdEQsSUFBTSxPQUFPLEdBQUcsSUFBSSxHQUFHLENBQXNDO0lBQzNELENBQUMsS0FBSyxFQUFFLGFBQVMsQ0FBQztJQUNsQixDQUFDLFFBQVEsRUFBRSxnQkFBb0IsQ0FBQztJQUNoQyxDQUFDLHNCQUFzQixFQUFFLDhCQUF5QixDQUFDO0lBQ25ELENBQUMsVUFBVSxFQUFFLGtCQUFtQixDQUFDO0NBQ2xDLENBQUMsQ0FBQztBQUVILFNBQVMsV0FBVyxDQUFDLEdBQTZCO0lBQ2hELE9BQU8sQ0FBQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBc0IsQ0FBQyxDQUFDO0FBQy9DLENBQUM7QUFFRCxTQUF3QixVQUFVLENBQ2hDLEVBQXNELEVBQ3RELE1BQWU7UUFEZixrQkFBc0QsRUFBckQsa0JBQVUsRUFBRSxlQUFPO0lBR3BCLElBQUksTUFBc0MsQ0FBQztJQUUzQyxJQUFJLFdBQVcsQ0FBQyxVQUFVLENBQUMsRUFBRTtRQUMzQixNQUFNLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQztLQUNsQztTQUFNO1FBQ0wsTUFBTSxHQUFHLHFCQUFVLENBQUMsVUFBVSxDQUF1QixDQUFDO1FBRXRELElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDWCxNQUFNLEdBQUcscUJBQVUsQ0FDakIsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLEVBQUUsVUFBVSxDQUFDLENBQ2YsQ0FBQztTQUN6QjtLQUNGO0lBRUQsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNYLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLDRCQUEwQixVQUFZLENBQUMsQ0FBQztRQUN4RCxPQUFPO0tBQ1I7SUFFRCxPQUFPLElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQzdCLENBQUM7QUF4QkQsNkJBd0JDIn0=