"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var fs_1 = __importDefault(require("fs"));
var path_1 = __importDefault(require("path"));
var registry_url_1 = __importDefault(require("registry-url"));
var util_1 = require("util");
var settings_url_1 = __importDefault(require("./settings-url"));
var readFile = util_1.promisify(fs_1.default.readFile);
var registry = registry_url_1.default();
// tslint:disable-next-line
var normalizedRegistry = registry.replace('http:', '').replace('https:', '');
function getGitHubToken(apiUrl) {
    if (apiUrl === void 0) { apiUrl = 'https://api.github.com'; }
    return __awaiter(this, void 0, void 0, function () {
        var helpText, rcLocation, rc, regex, token;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (process.env.GH_TOKEN) {
                        return [2 /*return*/, process.env.GH_TOKEN];
                    }
                    helpText = "Try setting an access token up " + settings_url_1.default(apiUrl);
                    if (!process.env.HOME) {
                        throw new Error("Can't find the GH_TOKEN and no HOME defined. " + helpText);
                    }
                    rcLocation = path_1.default.resolve(process.env.HOME, '.npmrc');
                    if (!fs_1.default.existsSync(rcLocation)) return [3 /*break*/, 2];
                    return [4 /*yield*/, readFile(rcLocation, 'utf8')];
                case 1:
                    rc = _a.sent();
                    regex = new RegExp(normalizedRegistry + ":_authToken=(\\w+)");
                    token = rc.match(regex);
                    if (token && token[1]) {
                        return [2 /*return*/, token[1]];
                    }
                    throw new Error("No token in the .npmrc. " + helpText);
                case 2: throw new Error("Can't find a GitHub token to use. " + helpText);
            }
        });
    });
}
exports.default = getGitHubToken;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2l0aHViLXRva2VuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWxzL2dpdGh1Yi10b2tlbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsMENBQW9CO0FBQ3BCLDhDQUF3QjtBQUN4Qiw4REFBdUM7QUFDdkMsNkJBQWlDO0FBQ2pDLGdFQUF5QztBQUV6QyxJQUFNLFFBQVEsR0FBRyxnQkFBUyxDQUFDLFlBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUN4QyxJQUFNLFFBQVEsR0FBRyxzQkFBVyxFQUFFLENBQUM7QUFDL0IsMkJBQTJCO0FBQzNCLElBQU0sa0JBQWtCLEdBQUcsUUFBUSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQUMsQ0FBQztBQUUvRSxTQUE4QixjQUFjLENBQzFDLE1BQWlDO0lBQWpDLHVCQUFBLEVBQUEsaUNBQWlDOzs7Ozs7b0JBRWpDLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUU7d0JBQ3hCLHNCQUFPLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFDO3FCQUM3QjtvQkFFSyxRQUFRLEdBQUcsb0NBQWtDLHNCQUFXLENBQUMsTUFBTSxDQUFHLENBQUM7b0JBRXpFLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRTt3QkFDckIsTUFBTSxJQUFJLEtBQUssQ0FBQyxrREFBZ0QsUUFBVSxDQUFDLENBQUM7cUJBQzdFO29CQUVLLFVBQVUsR0FBRyxjQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLFFBQVEsQ0FBQyxDQUFDO3lCQUV4RCxZQUFFLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxFQUF6Qix3QkFBeUI7b0JBQ2hCLHFCQUFNLFFBQVEsQ0FBQyxVQUFVLEVBQUUsTUFBTSxDQUFDLEVBQUE7O29CQUF2QyxFQUFFLEdBQUcsU0FBa0M7b0JBRXZDLEtBQUssR0FBRyxJQUFJLE1BQU0sQ0FBSSxrQkFBa0IsdUJBQXNCLENBQUMsQ0FBQztvQkFDaEUsS0FBSyxHQUFHLEVBQUUsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7b0JBQzlCLElBQUksS0FBSyxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRTt3QkFDckIsc0JBQU8sS0FBSyxDQUFDLENBQUMsQ0FBQyxFQUFDO3FCQUNqQjtvQkFFRCxNQUFNLElBQUksS0FBSyxDQUFDLDZCQUEyQixRQUFVLENBQUMsQ0FBQzt3QkFHekQsTUFBTSxJQUFJLEtBQUssQ0FBQyx1Q0FBcUMsUUFBVSxDQUFDLENBQUM7Ozs7Q0FDbEU7QUE1QkQsaUNBNEJDIn0=