"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var set_npm_auth_token_for_ci_1 = __importDefault(require("@hutson/set-npm-auth-token-for-ci"));
var fs = __importStar(require("fs"));
var is_ci_1 = __importDefault(require("is-ci"));
var parse_author_1 = __importDefault(require("parse-author"));
var util_1 = require("util");
var get_monorepo_packages_1 = __importDefault(require("get-monorepo-packages"));
var semver_1 = require("semver");
var exec_promise_1 = __importDefault(require("../../utils/exec-promise"));
var package_config_1 = __importDefault(require("./package-config"));
var readFile = util_1.promisify(fs.readFile);
function isMonorepo() {
    return fs.existsSync('lerna.json');
}
function setTokenOnCI() {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            if (is_ci_1.default) {
                set_npm_auth_token_for_ci_1.default();
            }
            return [2 /*return*/];
        });
    });
}
function getPublishedVersion(name) {
    return __awaiter(this, void 0, void 0, function () {
        var error_1;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 2, , 3]);
                    return [4 /*yield*/, exec_promise_1.default('npm', ['view', name, 'version'])];
                case 1: return [2 /*return*/, _a.sent()];
                case 2:
                    error_1 = _a.sent();
                    return [2 /*return*/];
                case 3: return [2 /*return*/];
            }
        });
    });
}
function greaterRelease(prefixRelease, name, packageVersion) {
    return __awaiter(this, void 0, void 0, function () {
        var publishedVersion, publishedPrefixed;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, getPublishedVersion(name)];
                case 1:
                    publishedVersion = _a.sent();
                    if (!publishedVersion) {
                        return [2 /*return*/, packageVersion];
                    }
                    publishedPrefixed = prefixRelease(publishedVersion);
                    return [2 /*return*/, semver_1.gt(packageVersion, publishedPrefixed)
                            ? packageVersion
                            : publishedPrefixed];
            }
        });
    });
}
exports.greaterRelease = greaterRelease;
function changedPackages(sha, logger) {
    return __awaiter(this, void 0, void 0, function () {
        var packages, changedFiles;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    packages = new Set();
                    return [4 /*yield*/, exec_promise_1.default('git', [
                            'show',
                            '--first-parent',
                            sha,
                            '--name-only',
                            '--pretty='
                        ])];
                case 1:
                    changedFiles = _a.sent();
                    changedFiles.split('\n').forEach(function (filePath) {
                        var parts = filePath.split('/');
                        if (parts[0] !== 'packages' || parts.length < 3) {
                            return;
                        }
                        packages.add(parts.length > 3 && parts[1][0] === '@'
                            ? parts[1] + "/" + parts[2]
                            : parts[1]);
                    });
                    if (packages.size > 0) {
                        logger.veryVerbose.info("Got changed packages for " + sha + ":\n", packages);
                    }
                    return [2 /*return*/, __spread(packages)];
            }
        });
    });
}
exports.changedPackages = changedPackages;
function getMonorepoPackage() {
    var packages = get_monorepo_packages_1.default(process.cwd());
    return packages.reduce(function (greatest, subPackage) {
        if (subPackage.package.version) {
            if (!greatest.version) {
                return subPackage.package;
            }
            return semver_1.gt(greatest.version, subPackage.package.version)
                ? greatest
                : subPackage.package;
        }
        return greatest;
    }, {});
}
exports.getMonorepoPackage = getMonorepoPackage;
/**
 * Attempt to create a map of monorepo packages
 */
function partitionPackages(labelCommits, lineRender) {
    return __awaiter(this, void 0, void 0, function () {
        var packageCommits;
        var _this = this;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    packageCommits = {};
                    return [4 /*yield*/, Promise.all(labelCommits.map(function (commit) { return __awaiter(_this, void 0, void 0, function () {
                            var line, packages;
                            return __generator(this, function (_a) {
                                switch (_a.label) {
                                    case 0: return [4 /*yield*/, lineRender(commit)];
                                    case 1:
                                        line = _a.sent();
                                        packages = commit.packages && commit.packages.length
                                            ? commit.packages.map(function (p) { return "`" + p + "`"; }).join(', ')
                                            : 'monorepo';
                                        if (!packageCommits[packages]) {
                                            packageCommits[packages] = [];
                                        }
                                        packageCommits[packages].push(line);
                                        return [2 /*return*/];
                                }
                            });
                        }); }))];
                case 1:
                    _a.sent();
                    return [2 /*return*/, packageCommits];
            }
        });
    });
}
function bumpLatest(_a, version) {
    var localVersion = _a.version, name = _a.name;
    return __awaiter(this, void 0, void 0, function () {
        var latestVersion, _b;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    if (!localVersion) return [3 /*break*/, 2];
                    return [4 /*yield*/, greaterRelease(function (s) { return s; }, name, localVersion)];
                case 1:
                    _b = _c.sent();
                    return [3 /*break*/, 3];
                case 2:
                    _b = undefined;
                    _c.label = 3;
                case 3:
                    latestVersion = _b;
                    return [2 /*return*/, latestVersion ? semver_1.inc(latestVersion, version) : version];
            }
        });
    });
}
function loadPackageJson() {
    return __awaiter(this, void 0, void 0, function () {
        var _a, _b;
        return __generator(this, function (_c) {
            switch (_c.label) {
                case 0:
                    _b = (_a = JSON).parse;
                    return [4 /*yield*/, readFile('package.json', 'utf-8')];
                case 1: return [2 /*return*/, _b.apply(_a, [_c.sent()])];
            }
        });
    });
}
var NPMPlugin = /** @class */ (function () {
    function NPMPlugin(config) {
        if (config === void 0) { config = {}; }
        this.name = 'NPM';
        this.setRcToken =
            typeof config.setRcToken === 'boolean' ? config.setRcToken : true;
    }
    NPMPlugin.prototype.apply = function (auto) {
        var _this = this;
        auto.hooks.beforeShipIt.tap(this.name, function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (!is_ci_1.default) {
                    return [2 /*return*/];
                }
                if (!process.env.NPM_TOKEN) {
                    throw new Error('NPM Token is needed for the NPM plugin!');
                }
                return [2 /*return*/];
            });
        }); });
        auto.hooks.getAuthor.tapPromise(this.name, function () { return __awaiter(_this, void 0, void 0, function () {
            var packageJson, author;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        auto.logger.verbose.info('NPM: Getting repo information from package.json');
                        return [4 /*yield*/, loadPackageJson()];
                    case 1:
                        packageJson = _a.sent();
                        if (!packageJson.author) {
                            return [2 /*return*/];
                        }
                        author = packageJson.author;
                        if (typeof author === 'string') {
                            return [2 /*return*/, parse_author_1.default(author)];
                        }
                        return [2 /*return*/, author];
                }
            });
        }); });
        auto.hooks.getPreviousVersion.tapPromise(this.name, function (prefixRelease) { return __awaiter(_this, void 0, void 0, function () {
            var previousVersion, monorepoVersion, _a, _b, _c, releasedPackage, _d, version, name, _e;
            return __generator(this, function (_f) {
                switch (_f.label) {
                    case 0:
                        previousVersion = '';
                        if (!isMonorepo()) return [3 /*break*/, 5];
                        auto.logger.veryVerbose.info('Using monorepo to calculate previous release');
                        _a = prefixRelease;
                        _c = (_b = JSON).parse;
                        return [4 /*yield*/, readFile('lerna.json', 'utf-8')];
                    case 1:
                        monorepoVersion = _a.apply(void 0, [_c.apply(_b, [_f.sent()]).version]);
                        releasedPackage = getMonorepoPackage();
                        if (!(!releasedPackage.name && !releasedPackage.version)) return [3 /*break*/, 2];
                        previousVersion = monorepoVersion;
                        return [3 /*break*/, 4];
                    case 2: return [4 /*yield*/, greaterRelease(prefixRelease, releasedPackage.name, monorepoVersion)];
                    case 3:
                        previousVersion = _f.sent();
                        _f.label = 4;
                    case 4: return [3 /*break*/, 10];
                    case 5:
                        if (!fs.existsSync('package.json')) return [3 /*break*/, 10];
                        auto.logger.veryVerbose.info('Using package.json to calculate previous version');
                        return [4 /*yield*/, loadPackageJson()];
                    case 6:
                        _d = _f.sent(), version = _d.version, name = _d.name;
                        if (!version) return [3 /*break*/, 8];
                        return [4 /*yield*/, greaterRelease(prefixRelease, name, prefixRelease(version))];
                    case 7:
                        _e = _f.sent();
                        return [3 /*break*/, 9];
                    case 8:
                        _e = '0.0.0';
                        _f.label = 9;
                    case 9:
                        previousVersion = _e;
                        _f.label = 10;
                    case 10:
                        auto.logger.verbose.info('NPM: Got previous version from package.json', previousVersion);
                        return [2 /*return*/, previousVersion];
                }
            });
        }); });
        auto.hooks.getRepository.tapPromise(this.name, function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                auto.logger.verbose.info('NPM: getting repo information from package.json');
                return [2 /*return*/, package_config_1.default()];
            });
        }); });
        auto.hooks.onCreateChangelog.tap(this.name, function (changelog) { return __awaiter(_this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                changelog.hooks.renderChangelogLine.tapPromise('NPM - Monorepo', function (commits, renderLine) { return __awaiter(_this, void 0, void 0, function () {
                    var packageCommits, pkgCount, hasRepoCommits, section;
                    var _this = this;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0:
                                if (!isMonorepo()) {
                                    console.log('bailed');
                                    return [2 /*return*/];
                                }
                                return [4 /*yield*/, Promise.all(commits.map(function (commit) { return __awaiter(_this, void 0, void 0, function () {
                                        var _a;
                                        return __generator(this, function (_b) {
                                            switch (_b.label) {
                                                case 0:
                                                    _a = commit;
                                                    return [4 /*yield*/, changedPackages(commit.hash, auto.logger)];
                                                case 1:
                                                    _a.packages = _b.sent();
                                                    return [2 /*return*/];
                                            }
                                        });
                                    }); }))];
                            case 1:
                                _a.sent();
                                return [4 /*yield*/, partitionPackages(commits, renderLine)];
                            case 2:
                                packageCommits = _a.sent();
                                pkgCount = Object.keys(packageCommits).length;
                                hasRepoCommits = packageCommits.monorepo && packageCommits.monorepo.length > 0;
                                if (pkgCount <= 0 || (pkgCount === 1 && packageCommits.monorepo)) {
                                    return [2 /*return*/];
                                }
                                section = [];
                                if (hasRepoCommits) {
                                    packageCommits.monorepo.forEach(function (note) { return section.push(note); });
                                    delete packageCommits.monorepo;
                                }
                                Object.entries(packageCommits).map(function (_a) {
                                    var _b = __read(_a, 2), pkg = _b[0], lines = _b[1];
                                    section.push("- " + pkg);
                                    lines.map(function (note) { return section.push("  " + note); });
                                });
                                return [2 /*return*/, section];
                        }
                    });
                }); });
                return [2 /*return*/];
            });
        }); });
        auto.hooks.version.tapPromise(this.name, function (version) { return __awaiter(_this, void 0, void 0, function () {
            var monorepoBump, latestBump, _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!isMonorepo()) return [3 /*break*/, 3];
                        auto.logger.verbose.info('Detected monorepo, using lerna');
                        return [4 /*yield*/, bumpLatest(getMonorepoPackage(), version)];
                    case 1:
                        monorepoBump = _b.sent();
                        return [4 /*yield*/, exec_promise_1.default('npx', [
                                'lerna',
                                'version',
                                monorepoBump || version,
                                '--force-publish',
                                '--no-commit-hooks',
                                '--yes',
                                '-m',
                                "'Bump version to: %v [skip ci]'"
                            ])];
                    case 2:
                        _b.sent();
                        auto.logger.verbose.info('Successfully versioned repo');
                        return [2 /*return*/];
                    case 3:
                        _a = bumpLatest;
                        return [4 /*yield*/, loadPackageJson()];
                    case 4: return [4 /*yield*/, _a.apply(void 0, [_b.sent(), version])];
                    case 5:
                        latestBump = _b.sent();
                        return [4 /*yield*/, exec_promise_1.default('npm', [
                                'version',
                                latestBump || version,
                                '-m',
                                '"Bump version to: %s [skip ci]"'
                            ])];
                    case 6:
                        _b.sent();
                        auto.logger.verbose.info('Successfully versioned repo');
                        return [2 /*return*/];
                }
            });
        }); });
        auto.hooks.publish.tapPromise(this.name, function () { return __awaiter(_this, void 0, void 0, function () {
            var _a, isPrivate, name, isScopedPackage;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!this.setRcToken) return [3 /*break*/, 2];
                        return [4 /*yield*/, setTokenOnCI()];
                    case 1:
                        _b.sent();
                        auto.logger.verbose.info('Set CI NPM_TOKEN');
                        _b.label = 2;
                    case 2:
                        if (!isMonorepo()) return [3 /*break*/, 6];
                        auto.logger.verbose.info('Detected monorepo, using lerna');
                        if (!(auto.args && auto.args.verbose)) return [3 /*break*/, 4];
                        return [4 /*yield*/, exec_promise_1.default('git', ['status', '--short'])];
                    case 3:
                        _b.sent();
                        _b.label = 4;
                    case 4: return [4 /*yield*/, exec_promise_1.default('npx', ['lerna', 'publish', '--yes', 'from-git'])];
                    case 5:
                        _b.sent();
                        auto.logger.verbose.info('Successfully published repo');
                        return [2 /*return*/];
                    case 6: return [4 /*yield*/, loadPackageJson()];
                    case 7:
                        _a = _b.sent(), isPrivate = _a.private, name = _a.name;
                        isScopedPackage = name.match(/@\S+\/\S+/);
                        return [4 /*yield*/, exec_promise_1.default('npm', !isPrivate && isScopedPackage
                                ? ['publish', '--access', 'public']
                                : ['publish'])];
                    case 8:
                        _b.sent();
                        return [4 /*yield*/, exec_promise_1.default('git', [
                                'push',
                                '--follow-tags',
                                '--set-upstream',
                                'origin',
                                '$branch'
                            ])];
                    case 9:
                        _b.sent();
                        auto.logger.verbose.info('Successfully published repo');
                        return [2 /*return*/];
                }
            });
        }); });
    };
    return NPMPlugin;
}());
exports.default = NPMPlugin;
//# sourceMappingURL=data:application/json;base64,